syntax = "proto3";
package it_has_alternatives;

service it_has_alternatives {
    // just try to put traefik outside the docker, then handle 80 port directly
    // then do auth only for requests_url that starts with 'it_has_alternatives'
    // for others, forward them to another traefik instance

    // we only allow get_special_jwt() and is_jwt_ok() and search_alternatives() and get_an_object() function not include the jwt token
    // others, in traefik logic, have to pass a jwt_check api, for example '/is_user', if it returns 200, then pass, if it returns 500, then refuse
    rpc get_special_jwt (Get_Special_JWT_Request) returns (Get_Special_JWT_Response);
    rpc is_jwt_ok (is_JWT_ok_Request) returns (is_JWT_ok_Response);

    rpc get_invitation_code (Get_invitation_code_request) returns (Get_invitation_code_response);

    rpc search_alternatives (Search_Alternative_Request) returns (Search_Alternative_Response);
    rpc get_an_object (Get_an_object_Request) returns (Get_an_object_Response);
    rpc add_alternative (Add_Object_Request) returns (Add_Object_Response);
    rpc update_alternative (Update_Object_Request) returns (Update_Object_Response);
    rpc delete_alternative (Delete_Object_Request) returns (Delete_Object_Response);

    rpc download_backup_data(Download_backup_data_request) returns (Download_backup_data_response);
    rpc upload_backup_data(Upload_backup_data_request) returns (Upload_backup_data_response);
}

enum Sort_By {
    like = 0;
    dislike = 1;
}

message A_User {
    string id = 1;
    int64 create_time_in_10_numbers_timestamp_format = 2;
    string email = 3;
    string password = 4;
    string jwt = 5;
    int64 level = 6;
    string parent_email = 7;
    repeated string children_email_list = 8;
    int64 invitation_counting = 9;
    repeated string invitation_code_list = 10;
    int64 last_login_time_in_10_numbers_timestamp_format = 8;
}

message An_Object {
    string id = 1;
    string name = 2;
    string description = 3;
    int64 level = 4;
    int64 likes = 5; 
    int64 dislikes = 6; 
    repeated string alternative_id_list = 7;
    int64 create_time_in_10_numbers_timestamp_format = 8;
    int64 update_time_in_10_numbers_timestamp_format = 8;
}

message Get_Special_JWT_Request {
    string email = 1;
    string password = 2; // it needs to have a strong password
    string invitation_code = 3;
}

message Get_Special_JWT_Response {
    string error = 1;
    string encrypted_jwt = 2;
}

message is_JWT_ok_Request {
    string jwt = 1;
}

message is_JWT_ok_Response {
    string error = 1;
    bool ok = 2;
    bool is_admin = 3;
}

message Get_invitation_code_request {

}

message Get_invitation_code_response {
    string error = 1;
    string invitation_code = 2;
}

message Search_Alternative_Request {
    string key_words = 1;
    string keywords_of_name = 2;
    string keywords_of_description = 3;
    Sort_By sort_by = 4;
    int64 page_size = 5;
    int64 page_number = 6;
}

message Search_Alternative_Response {
    optional string error = 1;
    repeated An_Object alternative_object_list = 2;
}

message Get_an_object_Request {
    string id = 1;
    string name = 2;
}

message Get_an_object_Response {
    optional string error = 1;
    An_Object an_object = 2;
}

message Add_Object_Request {
    An_Object an_object = 1;
}

message Add_Object_Response {
    optional string error = 1;
    bool success = 2;
}

message Update_Object_Request {
    An_Object an_object = 1;
}

message Update_Object_Response {
    optional string error = 1;
    bool success = 2;
}

message Delete_Object_Request {
    An_Object an_object = 1;
}

message Delete_Object_Response {
    optional string error = 1;
    bool success = 2;
}

message Download_backup_data_request {
}

message Download_backup_data_response {
    optional string error = 1;
    string file_name = 2;
    string file_bytes_in_base64_format = 3;
}

message Upload_backup_data_request {
    string file_bytes_in_base64_format = 1;
}

message Upload_backup_data_response {
    optional string error = 1;
    bool success = 2;
}